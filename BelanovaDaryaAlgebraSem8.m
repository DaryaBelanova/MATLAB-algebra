%% Задание 1
% Задайте матрицу A и затем матрицу AN, 
% содержащую компактное представление A. 
% Затем восстановите матрицу из компактного               
% вида обратно в полный.
% A = 
% |5 0 -3 0 0
% |1 3 0 -1 0
% |0 1 7 0 -2
% |0 0 1 22 0
% |0 0 0  1 8
disp("Задание 1")
A = [5 0 -3 0 0;
     1 3 0 -1 0;
     0 1 7 0 -2;
     0 0 1 22 0;
     0 0 0 1 8];
AN = sparse(A)
B = full(AN)
disp("A == B?")
A==B

%% Задание 2
% Создайте матрицу A из п. 1 с помощью 
% sparse(irow,jcol,nzer,m,n). Проверьте 
% полученный результат, превратив эту 
% матрицу обратно в полную (ср. с A). 
% посчитайте место, которое занимают в 
% памяти полная и компактная матрицы.  
disp("Задание 2")
irow = [1 2 2 3 1 3 4 2 4 5 3 5];
jcol = [1 1 2 2 3 3 3 4 4 4 5 5];
nzer = [5 1 3 1 -3 7 1 -1 22 1 -2 8];
AN = sparse(irow, jcol, nzer, 5, 5)
full(AN);
disp("A == full(AN)?")
A==full(AN)
whos A AN

%% Задание 3
% Найдите все ненулевые элементы 
% компактной матрицы AN (используя 
% функцию find).
disp("Задание 3")
[ir,jr,nz] = find(AN)

%% Задание 4
% Создайте компактный вид матрицы A (AN) 
% в текстовом файле (*.dat) и загрузите 
% из него эту матрицу, превратив её затем 
% в полную (функции load, spconvert и full).

% файл 'an.dat' закинут туда же, куда и этот (в общую ветку)
S = load('an.dat');
Aconv = spconvert(S)
full(Aconv)

%% Задание 5
% Упакуйте матрицу из п. 1 по диагоналям, 
% затем проверьте результат, превратив её 
% снова в полную.
disp("Задание 5")
[B,d] = spdiags(A)
A_diags = spdiags(B,d,5,5)
disp("A == full(A_diags)?")
A == full(A_diags)
full(A_diags)

%% Задание 6 
% Задайте матрицу B, затем упакуйте 
% её двумя способами, проверьте правильность 
% упаковки, вернув из упакованного вида обратно в
% полный, и посчитайте, сколько занимают памяти 
% упакованная и распакованная матрицы.
disp("Задание 6")
B = [4 1 0 0 1 0
     1 4 1 0 0 0
     0 1 4 0 0 0
     0 0 0 4 0 1
     1 0 0 0 4 1
     0 0 0 1 1 4];
[Diags, d] = spdiags(B)
Sparse = sparse(B)
disp("B from spdiags")
full(spdiags(Diags,d,6,6))
disp("B from sparse")
full(Sparse)
whos B Sparse Diags d

%% Задание 7
% Отобразите шаблон матрицы B из п.6, 
% используя функцию spy.  
figure("Name","Задание 7", "NumberTitle","off")
spy(B)

%% Задание 8
% Произведите упорядочение упакованной 
% матрицы B (symrcm) и восстановите полную 
% матрицу B после упорядочения. Снова 
% отобразите шаблон упорядоченной матрицы 
% и сравните с результатом из п. 7.
disp("Задание 8")
B_sparse = sparse(B);
B1 = symrcm(B_sparse)
B_full = full(B_sparse(B1,B1))
figure("Name","Задание 8","NumberTitle","off")
subplot(1,2,1)
spy(B_full)
subplot(1,2,2)
spy(B)

%% Задание 9
disp("Задание 9")
B = [7 1 1 1 1
     1 7 0 0 0
     1 0 7 0 0
     1 0 0 7 0
     1 0 0 0 7];
R1 = chol(B)
B_sym = symrcm(B)
rev1 = B(B_sym, B_sym)
R2 = chol(rev1)
nR1 = sum(sum(spones(R1)))
nR2 = sum(sum(spones(R2)))
